{
	"info": {
		"_postman_id": "417286ca-6162-4cf6-80d8-407665df1ebd",
		"name": "RolesAPI-NEWMAN",
		"description": "Contact Support:\n Email: guinetik@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Role",
			"item": [
				{
					"name": "New Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Reponse has role id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).not.equal(null);\r",
									"    pm.globals.set(\"role_id\", jsonData.id);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{role_name}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Role name should be unique."
					},
					"response": [
						{
							"name": "created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Engineer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 65898935,\n  \"name\": \"deserunt enim\"\n}"
						}
					]
				},
				{
					"name": "Role already exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response contains meaningful message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"That role already exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Developer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Role name should be unique."
					},
					"response": [
						{
							"name": "created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Engineer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 65898935,\n  \"name\": \"deserunt enim\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Assigns a team member to a role",
			"item": [
				{
					"name": "VALID REQUEST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": {{role_id}},\n  \"teamId\": \"{{teamId}}\",\n  \"userId\": \"{{userId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}"
						}
					]
				},
				{
					"name": "INVALID REQUEST - user doesnt belong to team",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response contains meaningful message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not assigned to this team!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": 1,\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"aa569071-6ade-4ff6-b567-6466fcbae74a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}"
						}
					]
				},
				{
					"name": "INVALID REQUEST - team doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response contains meaningful message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"Team not found on remote service:\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": 1,\n  \"teamId\": \"TEST\",\n  \"userId\": \"aa569071-6ade-4ff6-b567-6466fcbae74a\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}"
						}
					]
				},
				{
					"name": "INVALID REQUEST - user doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response contains meaningful message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"User not found on remote API:\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": 1,\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"TEST\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Look up roles",
			"item": [
				{
					"name": "VALID REQUEST - Look up a role for a membership. A membership is defined by a user id and a team id.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles?userId={{userId}}&teamId={{teamId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) User id to search for"
								},
								{
									"key": "teamId",
									"value": "{{teamId}}",
									"description": "(Required) Team id to search for"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}"
						},
						{
							"name": "User is not a member of this team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Membership not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "VALID REQUEST - Look up memberships for a role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:roleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":roleId"
							],
							"variable": [
								{
									"key": "roleId",
									"value": "{{role_id}}",
									"description": "(Required) The id of the role to look up"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "63250157",
											"description": "(Required) The id of the role to look up"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"roleId\": 1,\n    \"name\": \"Developer\",\n    \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n    \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n  },\n  {\n    \"roleId\": 1,\n    \"name\": \"Developer\",\n    \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n    \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n  }\n]"
						},
						{
							"name": "Role not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "63250157",
											"description": "(Required) The id of the role to look up"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Look up memberships for a user that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response contains meaningful message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"User not found on remote API:\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles?userId=1&teamId=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							],
							"query": [
								{
									"key": "userId",
									"value": "1",
									"description": "(Required) User id to search for"
								},
								{
									"key": "teamId",
									"value": "1",
									"description": "(Required) Team id to search for"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}"
						},
						{
							"name": "User is not a member of this team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Membership not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Look up memberships for a team that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response contains meaningful message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"Team not found on remote api\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles?userId={{userId}}&teamId=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) User id to search for"
								},
								{
									"key": "teamId",
									"value": "1",
									"description": "(Required) Team id to search for"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roleId\": 1,\n  \"name\": \"Developer\",\n  \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n  \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n}"
						},
						{
							"name": "User is not a member of this team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Membership not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles?userId=quis in ad ipsum fugiat&teamId=quis in ad ipsum fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "userId",
											"value": "quis in ad ipsum fugiat"
										},
										{
											"key": "teamId",
											"value": "quis in ad ipsum fugiat"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Look up memberships for a role that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response contains meaningful message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"Invalid Role\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:roleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":roleId"
							],
							"variable": [
								{
									"key": "roleId",
									"value": "4",
									"description": "(Required) The id of the role to look up"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "63250157",
											"description": "(Required) The id of the role to look up"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"roleId\": 1,\n    \"name\": \"Developer\",\n    \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n    \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n  },\n  {\n    \"roleId\": 1,\n    \"name\": \"Developer\",\n    \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n    \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n  }\n]"
						},
						{
							"name": "Role not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "63250157",
											"description": "(Required) The id of the role to look up"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Look up memberships for a role with no memberships",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Response should be empty\", function () {\r",
									"    pm.expect(pm.response.text()).to.eq(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles/:roleId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								":roleId"
							],
							"variable": [
								{
									"key": "roleId",
									"value": "3",
									"description": "(Required) The id of the role to look up"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "63250157",
											"description": "(Required) The id of the role to look up"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"roleId\": 1,\n    \"name\": \"Developer\",\n    \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n    \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n  },\n  {\n    \"roleId\": 1,\n    \"name\": \"Developer\",\n    \"teamId\": \"7676a4bf-adfe-415c-941b-1739af07039b\",\n    \"userId\": \"fd282131-d8aa-4819-b0c8-d9e0bfb1b75c\"\n  }\n]"
						},
						{
							"name": "Role not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "63250157",
											"description": "(Required) The id of the role to look up"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/tempo-cc-backend",
			"type": "string"
		}
	]
}